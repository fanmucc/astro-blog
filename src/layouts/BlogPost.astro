---
export interface Props {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  heroImage?: string;
  tags: string[];
  category: string;
  author?: string;
  readingTime?: number;
}

const { 
  title, 
  description, 
  pubDate, 
  updatedDate, 
  heroImage, 
  tags, 
  category, 
  author = '博主',
  readingTime 
} = Astro.props;

// 格式化日期
const formatDate = (date: Date) => {
  return date.toLocaleDateString('zh-CN', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// 生成目录
const headings = await Astro.slots.render('default').then(content => {
  const headingRegex = /<h([2-4])[^>]*id="([^"]*)"[^>]*>([^<]*)<\/h[2-4]>/g;
  const headings = [];
  let match;
  
  while ((match = headingRegex.exec(content)) !== null) {
    headings.push({
      level: parseInt(match[1]),
      id: match[2],
      text: match[3]
    });
  }
  
  return headings;
});
---

<html lang="zh-CN">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title} - 我的博客</title>
    <meta name="description" content={description} />
    
    <!-- SEO Meta Tags -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="article" />
    <meta property="article:published_time" content={pubDate.toISOString()} />
    {updatedDate && <meta property="article:modified_time" content={updatedDate.toISOString()} />}
    <meta property="article:author" content={author} />
    <meta property="article:section" content={category} />
    {tags.map(tag => <meta property="article:tag" content={tag} />)}
    {heroImage && <meta property="og:image" content={heroImage} />}
  </head>
  
  <body class="min-h-screen bg-gray-50 dark:bg-gray-900 m-0">
    <!-- 顶部导航 -->
    <header class="sticky top-0 z-50 w-full border-b border-gray-200 bg-white/80 backdrop-blur-md dark:border-gray-800 dark:bg-gray-900/80">
      <div class="px-4 lg:px-6">
        <div class="flex h-16 items-center justify-between">
          <!-- Logo -->
          <div class="flex items-center space-x-4">
            <a href="/" class="flex items-center space-x-3 group">
              <!-- Logo图标 -->
              <div class="flex h-10 w-10 items-center justify-center rounded-lg shadow-sm group-hover:shadow-md transition-all duration-200">
                <svg viewBox="0 0 120 120" class="h-10 w-10">
                  <!-- 定义渐变 -->
                  <defs>
                    <linearGradient id="primaryGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                      <stop offset="0%" style="stop-color:#f59e0b;stop-opacity:1" />
                      <stop offset="100%" style="stop-color:#d97706;stop-opacity:1" />
                    </linearGradient>
                    
                    <!-- 阴影滤镜 -->
                    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
                      <feDropShadow dx="1" dy="2" stdDeviation="2" flood-opacity="0.2" flood-color="#000"/>
                    </filter>
                  </defs>
                  
                  <!-- 背景圆形 -->
                  <circle cx="60" cy="60" r="56" fill="url(#primaryGradient)" filter="url(#shadow)"/>
                  
                  <!-- 代码符号 "{}" -->
                  <g transform="translate(60, 60)">
                    <!-- 左大括号 -->
                    <path d="M -20 -15 Q -25 -15 -25 -10 L -25 -5 Q -25 0 -30 0 Q -25 0 -25 5 L -25 10 Q -25 15 -20 15" 
                          stroke="white" stroke-width="3" fill="none" stroke-linecap="round"/>
                    
                    <!-- 右大括号 -->
                    <path d="M 20 -15 Q 25 -15 25 -10 L 25 -5 Q 25 0 30 0 Q 25 0 25 5 L 25 10 Q 25 15 20 15" 
                          stroke="white" stroke-width="3" fill="none" stroke-linecap="round"/>
                    
                    <!-- 中间的点 -->
                    <circle cx="-8" cy="-3" r="2" fill="white"/>
                    <circle cx="0" cy="3" r="2" fill="white"/>
                    <circle cx="8" cy="-3" r="2" fill="white"/>
                  </g>
                  
                  <!-- 装饰性几何元素 -->
                  <g opacity="0.3">
                    <!-- 左上角三角形 -->
                    <polygon points="15,25 25,15 35,25" fill="white"/>
                    <!-- 右下角菱形 -->
                    <polygon points="85,85 95,90 85,95 75,90" fill="white"/>
                  </g>
                </svg>
              </div>
              <!-- 博客名称和副标题 -->
              <div class="flex flex-col">
                <span class="text-xl font-bold text-gray-900 dark:text-gray-100 group-hover:text-orange-600 dark:group-hover:text-orange-400 transition-colors duration-200 leading-tight">
                  Fanmu
                </span>
                <span class="text-xs text-gray-500 dark:text-gray-400 font-medium leading-none">
                  yancode.life
                </span>
              </div>
            </a>
          </div>
          
          <!-- 导航菜单 -->
          <nav class="hidden md:flex items-center space-x-6">
            <a href="/" class="text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100">首页</a>
            <a href="/blog" class="text-orange-600 font-medium">博客</a>
            <a href="/categories" class="text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100">分类</a>
            <a href="/about" class="text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100">关于</a>
          </nav>
          
          <!-- 功能按钮 -->
          <div class="flex items-center space-x-3">
            <button class="p-2 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100">
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </button>
            <button id="theme-toggle" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 border-none bg-none" style="border: none; background: none; padding: 0; margin: 0;">
              <svg class="h-5 w-5 hidden dark:block" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="1.5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" />
              </svg>
              <svg class="h-5 w-5 block dark:hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="1.5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z" />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </header>

    <!-- 面包屑导航 -->
    <nav class="border-b border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-900">
      <div class="container mx-auto px-4 py-3">
        <ol class="flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400">
          <li><a href="/" class="hover:text-gray-700 dark:hover:text-gray-300">首页</a></li>
          <li class="flex items-center">
            <svg class="h-4 w-4 mx-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
            <a href="/blog" class="hover:text-gray-700 dark:hover:text-gray-300">博客</a>
          </li>
          <li class="flex items-center">
            <svg class="h-4 w-4 mx-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
            <span class="text-gray-900 dark:text-gray-100">{title}</span>
          </li>
        </ol>
      </div>
    </nav>

    <!-- 主要内容区域 -->
    <div class="flex min-h-screen">
      <!-- 左侧边栏 -->
      <aside class="w-64 flex-shrink-0 border-r border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-900">
        <div class="flex-1 px-4 py-6">
          <!-- 分类导航 -->
          <div class="mb-8">
            <h3 class="mb-4 text-sm font-semibold text-gray-500 uppercase tracking-wider dark:text-gray-400">
              分类
            </h3>
            <nav class="space-y-2">
              <a href="/categories/技术" class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800">
                <span class="w-2 h-2 rounded-full bg-blue-500 mr-3"></span>
                技术文章
              </a>
              <a href="/categories/生活" class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800">
                <span class="w-2 h-2 rounded-full bg-green-500 mr-3"></span>
                生活分享
              </a>
              <a href="/categories/公告" class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800">
                <span class="w-2 h-2 rounded-full bg-orange-500 mr-3"></span>
                网站公告
              </a>
            </nav>
          </div>

          <!-- 目录导航 -->
          {headings.length > 0 && (
            <div>
              <h3 class="mb-4 text-sm font-semibold text-gray-500 uppercase tracking-wider dark:text-gray-400">
                目录
              </h3>
              <nav class="space-y-1">
                {headings.map((heading) => (
                  <a 
                    href={`#${heading.id}`}
                    class={`block py-1 text-sm text-gray-600 hover:text-orange-600 dark:text-gray-400 dark:hover:text-orange-400 transition-colors ${
                      heading.level === 3 ? 'pl-4' : heading.level === 4 ? 'pl-8' : ''
                    }`}
                  >
                    {heading.text}
                  </a>
                ))}
              </nav>
            </div>
          )}
        </div>
      </aside>

      <!-- 主内容区 -->
      <main class="flex-1 px-6 py-8 lg:px-8 max-w-none">
        <!-- 文章头部 -->
        <header class="mb-8">
          {heroImage && (
            <img 
              src={heroImage} 
              alt={title}
              class="w-full h-64 object-cover rounded-lg mb-6"
            />
          )}
          
          <div class="flex items-center mb-4">
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300">
              {category}
            </span>
            {readingTime && (
              <span class="ml-3 text-sm text-gray-500 dark:text-gray-400">
                阅读时间 {readingTime} 分钟
              </span>
            )}
          </div>
          
          <h1 class="text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4">
            {title}
          </h1>
          
          <p class="text-xl text-gray-600 dark:text-gray-400 mb-6">
            {description}
          </p>
          
          <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400 border-b border-gray-200 dark:border-gray-800 pb-6">
            <div class="flex items-center space-x-4">
              <span>作者: {author}</span>
              <span>发布于 {formatDate(pubDate)}</span>
              {updatedDate && (
                <span>更新于 {formatDate(updatedDate)}</span>
              )}
            </div>
          </div>
        </header>

        <!-- 文章内容 -->
        <article class="prose prose-lg max-w-none prose-gray dark:prose-invert">
          <slot />
        </article>

        <!-- 文章标签 -->
        {tags.length > 0 && (
          <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-800">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">标签</h3>
            <div class="flex flex-wrap gap-2">
              {tags.map((tag) => (
                <a 
                  href={`/tags/${tag}`}
                  class="px-3 py-1 text-sm font-medium bg-gray-100 text-gray-700 rounded-full hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-300 dark:hover:bg-gray-700 transition-colors"
                >
                  #{tag}
                </a>
              ))}
            </div>
          </div>
        )}

        <!-- 导航到上一篇/下一篇 -->
        <nav class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-800">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <a href="#" class="block p-4 border border-gray-200 rounded-lg hover:bg-gray-50 dark:border-gray-700 dark:hover:bg-gray-800 transition-colors">
              <div class="text-sm text-gray-500 dark:text-gray-400 mb-1">← 上一篇</div>
              <div class="font-medium text-gray-900 dark:text-gray-100">文章标题</div>
            </a>
            <a href="#" class="block p-4 border border-gray-200 rounded-lg hover:bg-gray-50 dark:border-gray-700 dark:hover:bg-gray-800 transition-colors text-right">
              <div class="text-sm text-gray-500 dark:text-gray-400 mb-1">下一篇 →</div>
              <div class="font-medium text-gray-900 dark:text-gray-100">文章标题</div>
            </a>
          </div>
        </nav>
      </main>
    </div>

    <!-- 主题切换脚本 -->
    <script>
      // 主题切换功能
      const themeToggle = document.getElementById('theme-toggle');
      
      function toggleTheme() {
        const html = document.documentElement;
        const isDark = html.classList.contains('dark');
        
        if (isDark) {
          html.classList.remove('dark');
          localStorage.setItem('theme', 'light');
        } else {
          html.classList.add('dark');
          localStorage.setItem('theme', 'dark');
        }
      }
      
      function initTheme() {
        const savedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        
        if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
          document.documentElement.classList.add('dark');
        }
      }
      
      // 初始化主题
      initTheme();
      
      // 绑定点击事件
      themeToggle?.addEventListener('click', toggleTheme);

      // 平滑滚动到锚点
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });
    </script>

    <style>
      @import '../styles/global.css';
      
      /* 增强的 prose 样式 */
      .prose {
        @apply text-gray-800 dark:text-gray-200;
      }
      
      .prose h2, .prose h3, .prose h4 {
        @apply scroll-mt-24;
      }
      
      .prose h2 {
        @apply text-2xl font-bold text-gray-900 dark:text-gray-100 mt-8 mb-4;
      }
      
      .prose h3 {
        @apply text-xl font-semibold text-gray-900 dark:text-gray-100 mt-6 mb-3;
      }
      
      .prose h4 {
        @apply text-lg font-medium text-gray-900 dark:text-gray-100 mt-4 mb-2;
      }
      
      .prose p {
        @apply mb-4 leading-relaxed;
      }
      
      .prose a {
        @apply text-orange-600 hover:text-orange-700 dark:text-orange-400 dark:hover:text-orange-300 font-medium no-underline;
      }
      
      .prose a:hover {
        @apply underline;
      }
      
      .prose code {
        @apply bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 px-1.5 py-0.5 rounded text-sm font-mono;
      }
      
      .prose pre {
        @apply bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto;
      }
      
      .prose pre code {
        @apply bg-transparent text-gray-100 p-0;
      }
      
      .prose blockquote {
        @apply border-l-4 border-orange-500 bg-orange-50 dark:bg-orange-900/20 pl-4 py-2 italic;
      }
      
      .prose ul, .prose ol {
        @apply mb-4;
      }
      
      .prose li {
        @apply mb-1;
      }
    </style>
  </body>
</html>