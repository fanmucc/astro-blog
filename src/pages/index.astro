---
// 暂时不使用内容集合，用静态数据测试布局
const posts = [
  {
    title: "欢迎来到我的博客",
    description: "这是第一篇测试文章，用于展示博客布局效果。",
    pubDate: new Date('2024-06-01'),
    slug: "welcome-post",
    tags: ["欢迎", "测试"],
    category: "公告"
  },
  {
    title: "Astro 入门指南",
    description: "学习如何使用 Astro 构建现代化的静态网站。",
    pubDate: new Date('2024-06-05'),
    slug: "astro-guide",
    tags: ["Astro", "教程"],
    category: "技术"
  },
  {
    title: "Tailwind CSS 最佳实践",
    description: "分享在项目中使用 Tailwind CSS 的经验和技巧。",
    pubDate: new Date('2024-06-10'),
    slug: "tailwind-tips",
    tags: ["CSS", "前端"],
    category: "技术"
  }
];

// 格式化日期的辅助函数
const formatDate = (date) => {
  if (!date) return '';
  return date.toLocaleDateString('zh-CN', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// 导入图标组件
import { 
  Home, 
  Code2, 
  Triangle, 
  ArrowRight, 
  Database, 
  Cog 
} from 'lucide-react';
---

<html lang="zh-CN">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Fanmu - yancode.life</title>
    <meta name="description" content="分享技术见解、生活感悟和学习心得" />
  </head>
  <body class="h-screen bg-white dark:bg-gray-900 m-0 overflow-hidden">
    <!-- 优化后的顶部导航 -->
    <header class="sticky top-0 z-50 w-full border-b border-gray-200 bg-white/80 backdrop-blur-md dark:border-gray-800 dark:bg-gray-900/80">
      <div class="px-4 lg:px-6">
        <div class="flex h-16 items-center justify-between">
          <!-- 左侧：Logo + 博客名称 -->
          <div class="flex items-center space-x-3">
            <a href="/" class="flex items-center space-x-3 group">
              <!-- Logo图标 -->
              <div class="flex h-10 w-10 items-center justify-center rounded-lg shadow-sm group-hover:shadow-md transition-all duration-200">
                <svg viewBox="0 0 120 120" class="h-10 w-10">
                  <!-- 定义渐变 -->
                  <defs>
                    <linearGradient id="primaryGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                      <stop offset="0%" style="stop-color:#f59e0b;stop-opacity:1" />
                      <stop offset="100%" style="stop-color:#d97706;stop-opacity:1" />
                    </linearGradient>
                    
                    <!-- 阴影滤镜 -->
                    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
                      <feDropShadow dx="1" dy="2" stdDeviation="2" flood-opacity="0.2" flood-color="#000"/>
                    </filter>
                  </defs>
                  
                  <!-- 背景圆形 -->
                  <circle cx="60" cy="60" r="56" fill="url(#primaryGradient)" filter="url(#shadow)"/>
                  
                  <!-- 代码符号 "{}" -->
                  <g transform="translate(60, 60)">
                    <!-- 左大括号 -->
                    <path d="M -20 -15 Q -25 -15 -25 -10 L -25 -5 Q -25 0 -30 0 Q -25 0 -25 5 L -25 10 Q -25 15 -20 15" 
                          stroke="white" stroke-width="3" fill="none" stroke-linecap="round"/>
                    
                    <!-- 右大括号 -->
                    <path d="M 20 -15 Q 25 -15 25 -10 L 25 -5 Q 25 0 30 0 Q 25 0 25 5 L 25 10 Q 25 15 20 15" 
                          stroke="white" stroke-width="3" fill="none" stroke-linecap="round"/>
                    
                    <!-- 中间的点 -->
                    <circle cx="-8" cy="-3" r="2" fill="white"/>
                    <circle cx="0" cy="3" r="2" fill="white"/>
                    <circle cx="8" cy="-3" r="2" fill="white"/>
                  </g>
                  
                  <!-- 装饰性几何元素 -->
                  <g opacity="0.3">
                    <!-- 左上角三角形 -->
                    <polygon points="15,25 25,15 35,25" fill="white"/>
                    <!-- 右下角菱形 -->
                    <polygon points="85,85 95,90 85,95 75,90" fill="white"/>
                  </g>
                </svg>
              </div>
              <!-- 博客名称和副标题 -->
              <div class="flex flex-col">
                <span class="text-xl font-bold text-gray-900 dark:text-gray-100 group-hover:text-orange-600 dark:group-hover:text-orange-400 transition-colors duration-200 leading-tight">
                  Fanmu
                </span>
                <span class="text-xs text-gray-500 dark:text-gray-400 font-medium leading-none">
                  yancode.life
                </span>
              </div>
            </a>
          </div>
          
          <!-- 右侧：搜索 + 主题切换 -->
          <div class="flex items-center space-x-3">
            <!-- 搜索框 -->
            <div class="relative group">
              <div class="relative">
                <input
                  type="search"
                  placeholder="搜索"
                  class="w-64 pl-10 pr-4 py-2.5 text-sm bg-gray-50 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all duration-200 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100 dark:placeholder-gray-400 dark:focus:ring-orange-600"
                />
                <!-- 搜索图标 -->
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <svg class="h-4 w-4 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </div>
                <!-- 快捷键提示 -->
                <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
                  <kbd class="hidden sm:inline-flex h-5 select-none items-center gap-1 rounded border border-gray-200 bg-gray-100 px-1.5 font-mono text-xs text-gray-600 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400">
                    <span class="text-xs">⌘</span>K
                  </kbd>
                </div>
              </div>
            </div>
            
            <!-- 主题切换按钮 -->
            <button 
              id="theme-toggle" 
              class="text-gray-500 hover:text-gray-700 transition-colors duration-200 dark:text-gray-400 dark:hover:text-gray-200"
              style={{
                border: 'none',
                background: 'none',
                padding: '0',
                margin: '0'
              }}
              aria-label="切换主题"
            >
              <!-- 太阳图标 (暗色模式下显示) -->
              <svg class="h-5 w-5 hidden dark:block" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="1.5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" />
              </svg>
              <!-- 月亮图标 (亮色模式下显示) -->
              <svg class="h-5 w-5 block dark:hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="1.5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z" />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </header>

    <!-- 主要内容区域 -->
    <div class="flex" style={{ height: 'calc(100vh - 4rem)' }}>
      <!-- 左侧边栏 - 应用侧边栏滚动条样式 -->
      <aside class="w-64 flex-shrink-0 border-r border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-900 flex flex-col h-full">
        <div class="flex-1 overflow-y-auto px-4 py-6 sidebar-scroll scroll-smooth-enhanced">
          <!-- 主菜单区域 -->
          <div class="mb-6 bg-gray-50 dark:bg-gray-800 rounded-lg p-4">
            <nav class="space-y-1">
              <!-- 首页 -->
              <a href="/" class="group flex items-center px-3 py-2.5 text-sm font-medium rounded-lg bg-orange-100 text-orange-700 dark:bg-orange-900/30 dark:text-orange-300">
                <Home className="mr-3 h-5 w-5 text-orange-500" />
                首页
              </a>
              
              <!-- React -->
              <a href="/react" class="group flex items-center px-3 py-2.5 text-sm font-medium rounded-lg text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-gray-100 transition-colors duration-200">
                <Code2 className="mr-3 h-5 w-5 text-blue-500" />
                React
              </a>
              
              <!-- Vue -->
              <a href="/vue" class="group flex items-center px-3 py-2.5 text-sm font-medium rounded-lg text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-gray-100 transition-colors duration-200">
                <Triangle className="mr-3 h-5 w-5 text-green-500" />
                Vue
              </a>
              
              <!-- Next.js -->
              <a href="/next" class="group flex items-center px-3 py-2.5 text-sm font-medium rounded-lg text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-gray-100 transition-colors duration-200">
                <ArrowRight className="mr-3 h-5 w-5 text-gray-900 dark:text-gray-100" />
                Next
              </a>
              
              <!-- Nest.js -->
              <a href="/nest" class="group flex items-center px-3 py-2.5 text-sm font-medium rounded-lg text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-gray-100 transition-colors duration-200">
                <Database className="mr-3 h-5 w-5 text-red-500" />
                Nest
              </a>
              
              <!-- Rust -->
              <a href="/rust" class="group flex items-center px-3 py-2.5 text-sm font-medium rounded-lg text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-gray-100 transition-colors duration-200">
                <Cog className="mr-3 h-5 w-5 text-orange-600" />
                Rust
              </a>
            </nav>
          </div>

          <!-- 下方内容区域 - 第二区域 -->
          <div class="border-t border-gray-200 dark:border-gray-700 pt-4">
            <div class="text-sm text-gray-500 dark:text-gray-400 px-3 mb-3">
              子菜单区域
            </div>
            <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-4">
              <div class="text-xs text-gray-400 dark:text-gray-500 mb-3">
                根据上方选中的主菜单显示对应的子分类
              </div>
              
              <!-- 示例：更多子菜单内容（用于测试滚动） -->
              <div class="space-y-2">
                <div class="text-xs text-gray-500 dark:text-gray-400">示例子菜单：</div>
                <div class="pl-2 space-y-1">
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 基础教程</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 进阶指南</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 最佳实践</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 项目实战</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 性能优化</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 部署指南</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 调试技巧</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 常见问题</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 生态系统</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 社区资源</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 更新日志</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 迁移指南</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 插件开发</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• API 参考</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 配置选项</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 高级技巧</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 故障排除</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 版本兼容</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 扩展开发</div>
                  <div class="text-xs text-gray-400 dark:text-gray-500">• 测试策略</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </aside>

      <!-- 主内容区 - 应用主内容滚动条样式 -->
      <main class="flex-1 overflow-y-auto h-full main-content scroll-smooth-enhanced">
        <div class="px-6 py-6 lg:px-8">
          <!-- 欢迎区域 -->
          <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4">
              欢迎来到 Fanmu
            </h1>
            <p class="text-lg text-gray-600 dark:text-gray-400">
              分享技术见解、生活感悟和学习心得
            </p>
          </div>

          <!-- 文章列表 -->
          <div class="space-y-6">
            {posts.map((post) => (
              <article class="bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6 hover:shadow-md transition-shadow">
                <div class="flex items-start justify-between mb-4">
                  <div>
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300">
                      {post.category}
                    </span>
                  </div>
                  <time class="text-sm text-gray-500 dark:text-gray-400">
                    {formatDate(post.pubDate)}
                  </time>
                </div>
                
                <h2 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-3">
                  <a href={`/blog/${post.slug}`} class="hover:text-orange-600 dark:hover:text-orange-400">
                    {post.title}
                  </a>
                </h2>
                
                <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-2">
                  {post.description}
                </p>
                
                <div class="flex items-center justify-between">
                  <div class="flex flex-wrap gap-2">
                    {post.tags.map((tag) => (
                      <span class="px-2 py-1 text-xs font-medium bg-gray-100 text-gray-700 rounded dark:bg-gray-700 dark:text-gray-300">
                        #{tag}
                      </span>
                    ))}
                  </div>
                  <a href={`/blog/${post.slug}`} class="text-orange-600 hover:text-orange-700 dark:text-orange-400 dark:hover:text-orange-300 text-sm font-medium">
                    阅读更多 →
                  </a>
                </div>
              </article>
            ))}
            
            <!-- 添加更多内容用于测试滚动 -->
            <div class="text-center py-12">
              <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-4">更多内容</h3>
              <p class="text-gray-600 dark:text-gray-400 mb-8">这里会显示更多的博客文章...</p>
              
              <!-- 模拟更多文章 -->
              {Array.from({ length: 8 }, (_, i) => (
                <article class="bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6 hover:shadow-md transition-shadow mb-6">
                  <div class="flex items-start justify-between mb-4">
                    <div>
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300">
                        技术
                      </span>
                    </div>
                    <time class="text-sm text-gray-500 dark:text-gray-400">
                      2024年6月{15 + i}日
                    </time>
                  </div>
                  
                  <h2 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-3">
                    <a href="#" class="hover:text-orange-600 dark:hover:text-orange-400">
                      示例文章 {i + 1} - 测试滚动效果
                    </a>
                  </h2>
                  
                  <p class="text-gray-600 dark:text-gray-400 mb-4">
                    这是一篇示例文章，用于展示页面滚动效果。左侧菜单栏保持固定，只有右侧内容区域会滚动。当内容足够多时，可以测试滚动的流畅性和边界处理。现在你可以看到美化的滚动条效果！
                  </p>
                  
                  <div class="flex items-center justify-between">
                    <div class="flex flex-wrap gap-2">
                      <span class="px-2 py-1 text-xs font-medium bg-gray-100 text-gray-700 rounded dark:bg-gray-700 dark:text-gray-300">
                        #示例
                      </span>
                      <span class="px-2 py-1 text-xs font-medium bg-gray-100 text-gray-700 rounded dark:bg-gray-700 dark:text-gray-300">
                        #滚动测试
                      </span>
                    </div>
                    <a href="#" class="text-orange-600 hover:text-orange-700 dark:text-orange-400 dark:hover:text-orange-300 text-sm font-medium">
                      阅读更多 →
                    </a>
                  </div>
                </article>
              ))}
              
              <!-- 底部测试内容 -->
              <div class="mt-12 p-6 bg-gray-100 dark:bg-gray-800 rounded-lg">
                <h4 class="text-md font-medium text-gray-900 dark:text-gray-100 mb-2">滚动测试完成</h4>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  如果您能看到这个内容，说明右侧滚动功能正常工作，且底部内容没有被遮挡。现在滚动条已经美化，提供更好的视觉体验！
                </p>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>

    <!-- 搜索和主题切换脚本 -->
    <script>
      // 主题切换功能
      const themeToggle = document.getElementById('theme-toggle');
      
      function toggleTheme() {
        const html = document.documentElement;
        const isDark = html.classList.contains('dark');
        
        if (isDark) {
          html.classList.remove('dark');
          localStorage.setItem('theme', 'light');
        } else {
          html.classList.add('dark');
          localStorage.setItem('theme', 'dark');
        }
      }
      
      function initTheme() {
        const savedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        
        if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
          document.documentElement.classList.add('dark');
        }
      }
      
      // 初始化主题
      initTheme();
      
      // 绑定主题切换事件
      themeToggle?.addEventListener('click', toggleTheme);

      // 搜索功能
      const searchInput = document.querySelector('input[type="search"]');
      
      // 键盘快捷键 Cmd/Ctrl + K
      document.addEventListener('keydown', (e) => {
        if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
          e.preventDefault();
          searchInput?.focus();
        }
        
        // ESC 键取消搜索焦点
        if (e.key === 'Escape') {
          searchInput?.blur();
        }
      });
      
      // 搜索输入处理
      searchInput?.addEventListener('input', (e) => {
        const query = e.target.value.trim();
        if (query.length > 0) {
          // 这里可以添加实时搜索逻辑
          console.log('搜索:', query);
        }
      });
      
      // 搜索提交处理
      searchInput?.addEventListener('keydown', (e) => {
        if (e.key === 'Enter') {
          const query = e.target.value.trim();
          if (query.length > 0) {
            // 跳转到搜索结果页面
            window.location.href = `/search?q=${encodeURIComponent(query)}`;
          }
        }
      });

      // 滚动增强功能
      document.addEventListener('DOMContentLoaded', function() {
        const mainContent = document.querySelector('.main-content');
        const sidebar = document.querySelector('.sidebar-scroll');
        
        // 平滑滚动到顶部功能
        function scrollToTop(element) {
          element.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
        }
        
        // 双击滚动条区域回到顶部
        if (mainContent) {
          mainContent.addEventListener('dblclick', (e) => {
            // 只在点击滚动条区域时触发
            if (e.target === mainContent) {
              scrollToTop(mainContent);
            }
          });
        }
        
        // 键盘快捷键：Home键回到顶部
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Home' && e.ctrlKey) {
            e.preventDefault();
            if (mainContent) scrollToTop(mainContent);
          }
        });
      });
    </script>

    <style>
      /* 导入全局样式 */
      @import '../styles/global.css';
      
      /* 滚动条基础样式 - 确保优先级 */
      html, body {
        scroll-behavior: smooth;
      }
      
      /* 全局滚动条样式 - 使用更细的宽度 */
      ::-webkit-scrollbar {
        width: 4px !important;
        height: 4px !important;
      }

      ::-webkit-scrollbar-track {
        background: rgb(249 250 251) !important;
        border-radius: 3px !important;
      }

      ::-webkit-scrollbar-thumb {
        background: rgb(209 213 219) !important;
        border-radius: 3px !important;
        border: none !important;
        background-clip: content-box !important;
        transition: background-color 0.2s ease !important;
      }

      ::-webkit-scrollbar-thumb:hover {
        background: rgb(156 163 175) !important;
      }

      ::-webkit-scrollbar-thumb:active {
        background: rgb(107 114 128) !important;
      }

      /* 暗色模式滚动条 */
      .dark ::-webkit-scrollbar-track {
        background: rgb(17 24 39) !important;
      }

      .dark ::-webkit-scrollbar-thumb {
        background: rgb(75 85 99) !important;
      }

      .dark ::-webkit-scrollbar-thumb:hover {
        background: rgb(107 114 128) !important;
      }

      .dark ::-webkit-scrollbar-thumb:active {
        background: rgb(156 163 175) !important;
      }
      
      /* 侧边栏滚动条 - 非常细 */
      .sidebar-scroll::-webkit-scrollbar {
        width: 3px !important;
      }

      .sidebar-scroll::-webkit-scrollbar-track {
        background: transparent !important;
      }

      .sidebar-scroll::-webkit-scrollbar-thumb {
        background: rgb(209 213 219 / 0.7) !important;
        border-radius: 2px !important;
        border: none !important;
        background-clip: content-box !important;
      }

      .sidebar-scroll::-webkit-scrollbar-thumb:hover {
        background: rgb(156 163 175 / 0.9) !important;
      }

      .dark .sidebar-scroll::-webkit-scrollbar-thumb {
        background: rgb(75 85 99 / 0.7) !important;
      }

      .dark .sidebar-scroll::-webkit-scrollbar-thumb:hover {
        background: rgb(107 114 128 / 0.9) !important;
      }

      /* 主内容区滚动条 - 橙色主题，细线条 */
      .main-content::-webkit-scrollbar {
        width: 5px !important;
      }

      .main-content::-webkit-scrollbar-track {
        background: rgb(243 244 246 / 0.5) !important;
        border-radius: 3px !important;
        margin: 4px 0 !important;
      }

      .main-content::-webkit-scrollbar-thumb {
        background: rgb(251 146 60 / 0.7) !important;
        border-radius: 3px !important;
        border: none !important;
        background-clip: content-box !important;
        transition: all 0.2s ease !important;
      }

      .main-content::-webkit-scrollbar-thumb:hover {
        background: rgb(251 146 60 / 0.9) !important;
        transform: scaleX(1.1) !important;
      }

      .main-content::-webkit-scrollbar-thumb:active {
        background: rgb(249 115 22) !important;
      }

      .dark .main-content::-webkit-scrollbar-track {
        background: rgb(31 41 55 / 0.5) !important;
      }

      .dark .main-content::-webkit-scrollbar-thumb {
        background: rgb(234 88 12 / 0.7) !important;
      }

      .dark .main-content::-webkit-scrollbar-thumb:hover {
        background: rgb(234 88 12 / 0.9) !important;
      }

      .dark .main-content::-webkit-scrollbar-thumb:active {
        background: rgb(194 65 12) !important;
      }

      /* Firefox 滚动条支持 */
      html {
        scrollbar-width: thin !important;
        scrollbar-color: rgb(209 213 219) rgb(249 250 251) !important;
      }

      .dark html {
        scrollbar-color: rgb(75 85 99) rgb(17 24 39) !important;
      }

      .main-content {
        scrollbar-width: thin !important;
        scrollbar-color: rgb(251 146 60) rgb(243 244 246) !important;
        scroll-behavior: smooth !important;
        scroll-padding-top: 2rem !important;
      }

      .dark .main-content {
        scrollbar-color: rgb(234 88 12) rgb(31 41 55) !important;
      }

      .sidebar-scroll {
        scrollbar-width: thin !important;
        scrollbar-color: rgb(209 213 219) transparent !important;
        scroll-behavior: smooth !important;
        scroll-padding-top: 1rem !important;
      }

      .dark .sidebar-scroll {
        scrollbar-color: rgb(75 85 99) transparent !important;
      }
      
      /* 文本截断工具类 */
      .line-clamp-2 {
        display: -webkit-box !important;
        -webkit-line-clamp: 2 !important;
        -webkit-box-orient: vertical !important;
        overflow: hidden !important;
      }

      .line-clamp-3 {
        display: -webkit-box !important;
        -webkit-line-clamp: 3 !important;
        -webkit-box-orient: vertical !important;
        overflow: hidden !important;
      }

      /* 确保滚动容器正确设置 */
      .scroll-smooth-enhanced {
        scroll-behavior: smooth !important;
        scroll-padding-top: 2rem !important;
      }

      /* 响应式滚动条 - 移动端保持相同或更细 */
      @media (max-width: 768px) {
        ::-webkit-scrollbar {
          width: 3px !important;
        }
        
        .main-content::-webkit-scrollbar {
          width: 4px !important;
        }
        
        .sidebar-scroll::-webkit-scrollbar {
          width: 2px !important;
        }
      }
    </style>
  </body>
</html>