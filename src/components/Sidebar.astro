---
// src/components/Sidebar.astro - 侧边栏组件
import Icon from "./Icon.astro";

export interface Props {
	menuTree: any[];
	currentPath: string;
	showMainMenu?: boolean;
	showSubMenu?: boolean;
}

const {
	menuTree,
	currentPath,
	showMainMenu = true,
	showSubMenu = true,
} = Astro.props;

// 找到当前激活的主菜单
const currentMainMenu = menuTree.find((item) =>
	currentPath.startsWith(item.path)
);
---

<aside class='sidebar'>
	<div class='sidebar-content'>
		<!-- 主菜单 -->
		{
			showMainMenu && (
				<div class='main-menu-section'>
					<nav class='main-menu-nav' id='main-menu'>
						{menuTree.map((menuItem) => (
							<a
								href={menuItem.path}
								data-menu={menuItem.value}
								data-path={menuItem.path}
								class={`main-menu-item ${
									currentPath.startsWith(menuItem.path) ? "active" : ""
								}`}
							>
								{menuItem.icon && (
									<span class='main-menu-icon'>
										<Icon name={menuItem.icon as any} />
									</span>
								)}
								<span class='main-menu-text'>{menuItem.label}</span>
							</a>
						))}
					</nav>
				</div>
			)
		}

		<!-- 子菜单 -->
		{
			showSubMenu &&
				currentMainMenu &&
				currentMainMenu.children &&
				currentMainMenu.children.length > 0 && (
					<div class='submenu-section'>
						<div class='submenu-header'>
							<h3 class='submenu-title'>{currentMainMenu.label} - 子菜单</h3>
						</div>

						<div class='submenu-content'>
							{currentMainMenu.children.map((subItem) => {
								const isActive =
									currentPath === subItem.path ||
									currentPath.startsWith(subItem.path + "/");
								const hasChildren =
									subItem.children && subItem.children.length > 0;

								return (
									<div class='submenu-group'>
										<a
											href={subItem.path}
											class={`submenu-group-header ${isActive ? "active" : ""}`}
										>
											{hasChildren && (
												<span
													class={`submenu-expand-arrow ${isActive ? "expanded" : ""}`}
												>
													<svg
														width='20'
														height='20'
														viewBox='0 0 24 24'
														fill='none'
														stroke='currentColor'
														stroke-width='2'
													>
														<path d='m9 18 6-6-6-6' />
													</svg>
												</span>
											)}
											<span class='submenu-group-title'>{subItem.label}</span>
										</a>

										{hasChildren && isActive && subItem.children && (
											<div class='submenu-children'>
												<div class='submenu-divider' />
												{subItem.children.map((childItem) => (
													<div class='submenu-item'>
														<a
															href={childItem.path}
															class={`submenu-item-link ${
																currentPath === childItem.path ? "active" : ""
															}`}
														>
															<div
																class={`submenu-indicator ${
																	currentPath === childItem.path ? "active" : ""
																}`}
															/>
															<span class='submenu-item-text'>
																{childItem.label}
															</span>
														</a>
													</div>
												))}
											</div>
										)}
									</div>
								);
							})}
						</div>
					</div>
				)
		}

		<!-- 空状态提示 -->
		{
			showSubMenu &&
				(!currentMainMenu ||
					!currentMainMenu.children ||
					currentMainMenu.children.length === 0) && (
					<div class='submenu-section'>
						<div class='submenu-header'>
							<h3 class='submenu-title'>子菜单</h3>
						</div>
						<div class='submenu-placeholder'>
							<p class='placeholder-text'>选择上方菜单查看子选项</p>
						</div>
					</div>
				)
		}
	</div>
</aside>

<style>
	/* 侧边栏基础样式 */
	.sidebar {
		width: 16rem;
		flex-shrink: 0;
		border-right: 1px solid var(--a-sidebar-border);
		background-color: var(--a-sidebar-bg);
		display: flex;
		flex-direction: column;
		height: 100%;
	}

	.sidebar-content {
		flex: 1;
		overflow-y: auto;
		padding: 1rem 0.5rem;
		scrollbar-width: thin;
		scrollbar-color: var(--g-border) transparent;
	}

	.sidebar-content::-webkit-scrollbar {
		width: 3px;
	}

	.sidebar-content::-webkit-scrollbar-track {
		background: transparent;
	}

	.sidebar-content::-webkit-scrollbar-thumb {
		background: var(--g-border);
		border-radius: 2px;
	}

	.sidebar-content::-webkit-scrollbar-thumb:hover {
		background: var(--g-border-dark);
	}

	/* 主菜单样式 */
	.main-menu-section {
		background-color: var(--a-main-bg);
		border-radius: 0.5rem;
		padding: 0.5rem;
		margin-bottom: 1.5rem;
	}

	.main-menu-nav {
		display: flex;
		flex-direction: column;
		gap: 0.25rem;
	}

	.main-menu-item {
		display: flex;
		align-items: center;
		width: 100%;
		padding: 0.625rem 0.75rem;
		font-size: 0.875rem;
		font-weight: 500;
		background-color: var(--a-main-item-bg);
		color: var(--a-main-item-text);
		border-radius: 0.5rem;
		text-decoration: none;
		transition: all var(--transition-normal);
	}

	.main-menu-item:hover {
		background-color: var(--a-main-item-bg-hover);
		color: var(--a-main-item-text-hover);
	}

	.main-menu-item.active {
		background-color: var(--a-main-item-bg-active);
		color: var(--a-main-item-text-active);
		box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
	}

	.main-menu-icon {
		margin-right: 0.75rem;
		height: 1.25rem;
		width: 1.25rem;
		display: flex;
		align-items: center;
		justify-content: center;
		color: var(--a-main-icon);
	}

	.main-menu-item.active .main-menu-icon {
		color: var(--a-main-icon-active);
	}

	.main-menu-text {
		flex: 1;
	}

	/* 子菜单样式 */
	.submenu-section {
		padding: 0.5rem 1rem 0;
		border-top: 1px solid var(--a-sidebar-border);
	}

	.submenu-header {
		margin-bottom: 0.75rem;
	}

	.submenu-title {
		font-size: 0.875rem;
		font-weight: 500;
		color: var(--a-sub-title);
		text-transform: uppercase;
		letter-spacing: 0.05em;
		margin: 0;
		padding: 0 0.75rem;
	}

	.submenu-content {
		display: flex;
		flex-direction: column;
		gap: 0.125rem;
	}

	/* 子菜单组 */
	.submenu-group {
		margin-bottom: 0.5rem;
	}

	.submenu-group-header {
		display: flex;
		align-items: center;
		padding: 0.75rem;
		cursor: pointer;
		border-radius: 0.375rem;
		text-decoration: none;
		transition: all var(--transition-fast);
		background-color: var(--a-sub-item-bg);
	}

	.submenu-group-header:hover {
		background-color: var(--a-sub-item-bg-hover);
	}

	.submenu-group-header.active {
		background-color: var(--a-sub-item-bg-active);
	}

	.submenu-expand-arrow {
		width: 1.5rem;
		height: 1.5rem;
		display: flex;
		align-items: center;
		justify-content: center;
		color: var(--g-text-secondary);
		transition: transform var(--transition-fast);
	}

	.submenu-expand-arrow.expanded {
		transform: rotate(90deg);
	}

	.submenu-group-title {
		margin-left: 0.75rem;
		font-size: 0.875rem;
		font-weight: 500;
		color: var(--m-content-heading);
	}

	.submenu-group-header.active .submenu-group-title {
		color: var(--a-sub-item-text-active);
	}

	/* 子菜单子项 */
	.submenu-children {
		position: relative;
		margin-left: 0.75rem;
		margin-top: 0.25rem;
	}

	.submenu-divider {
		position: absolute;
		left: 0.75rem;
		top: 0;
		bottom: 0;
		width: 1px;
		background-color: var(--a-sub-border);
	}

	.submenu-item {
		position: relative;
		margin-bottom: 0.125rem;
	}

	.submenu-item-link {
		display: flex;
		align-items: center;
		padding: 0.75rem 0;
		text-decoration: none;
		transition: all var(--transition-fast);
	}

	.submenu-indicator {
		width: 1px;
		height: 100%;
		background-color: var(--a-sub-border);
		margin-right: 2.25rem;
		transition: all var(--transition-fast);
		transform-origin: center;
	}

	.submenu-item-link:hover .submenu-indicator {
		background-color: var(--a-sub-border-active);
		transform: scaleX(2);
	}

	.submenu-indicator.active {
		background-color: var(--a-sub-border-active);
		transform: scaleX(3);
		filter: drop-shadow(0 0 3px rgba(251, 146, 60, 0.6));
	}

	.submenu-item-text {
		font-size: 0.875rem;
		color: var(--a-sub-item-text);
		transition: color var(--transition-fast);
	}

	.submenu-item-link:hover .submenu-item-text {
		color: var(--a-sub-item-text-hover);
	}

	.submenu-item-link.active .submenu-item-text {
		color: var(--a-sub-item-text-active);
		font-weight: 500;
	}

	/* 空状态 */
	.submenu-placeholder {
		padding: 1rem 0.75rem;
		text-align: center;
	}

	.placeholder-text {
		font-size: 0.75rem;
		color: var(--g-text-muted);
		margin: 0;
	}

	/* 响应式设计 */
	@media (max-width: 768px) {
		.sidebar {
			width: 14rem;
		}

		.main-menu-item {
			padding: 0.5rem;
			font-size: 0.75rem;
		}

		.submenu-title {
			font-size: 0.75rem;
		}

		.submenu-group-title,
		.submenu-item-text {
			font-size: 0.75rem;
		}
	}

	@media (min-width: 1280px) {
		.sidebar {
			width: 18rem;
		}
	}
</style>
