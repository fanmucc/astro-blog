---
// src/components/Header.astro - ‰øÆÂ§çÂêéÁöÑÂ§¥ÈÉ®ÂØºËà™ÁªÑ‰ª∂
export interface Props {
	currentPath?: string;
	showSearch?: boolean;
	showThemeToggle?: boolean;
}

const {
	currentPath = Astro.url.pathname,
	showSearch = false,
	showThemeToggle = true,
} = Astro.props;
---

<header class='header-nav'>
	<div class='header-container'>
		<div class='header-content'>
			<!-- Â∑¶‰æßÔºöLogo -->
			<div class='logo-section'>
				<a href='/' class='logo-link' data-astro-prefetch>
					<div class='logo-icon'>
						<svg viewBox='0 0 48 48' class='h-10 w-10 logo-svg' data-theme-protected='true'>
							<defs>
								<linearGradient
									id='fanmuGradient-logo'
									x1='0%'
									y1='0%'
									x2='100%'
									y2='100%'
								>
									<stop offset='0%' style='stop-color:#1e40af;stop-opacity:1'></stop>
									<stop offset='50%' style='stop-color:#1d4ed8;stop-opacity:1'></stop>
									<stop offset='100%' style='stop-color:#06b6d4;stop-opacity:1'></stop>
								</linearGradient>
								<filter
									id='glow'
									x='-50%'
									y='-50%'
									width='200%'
									height='200%'
								>
									<feGaussianBlur stdDeviation='2' result='coloredBlur'/>
									<feMerge>
										<feMergeNode in='coloredBlur'/>
										<feMergeNode in='SourceGraphic'/>
									</feMerge>
								</filter>
							</defs>
							
							<!-- Â§ñÂúÜËÉåÊôØ -->
							<circle
								cx='24'
								cy='24'
								r='22'
								fill='url(#fanmuGradient-logo)'
								opacity='0.1'
								stroke='url(#fanmuGradient-logo)'
								stroke-width='1'
							></circle>
							
							<!-- FÂ≠óÊØç‰∏ª‰Ωì -->
							<g transform='translate(24, 24)' filter='url(#glow)'>
								<!-- F ÁöÑÁ´ñÁ∫ø -->
								<rect
									x='-8'
									y='-12'
									width='3'
									height='24'
									fill='url(#fanmuGradient-logo)'
									rx='1.5'
								></rect>
								<!-- F ÁöÑ‰∏äÊ®™Á∫ø -->
								<rect
									x='-8'
									y='-12'
									width='12'
									height='3'
									fill='url(#fanmuGradient-logo)'
									rx='1.5'
								></rect>
								<!-- F ÁöÑ‰∏≠Ê®™Á∫ø -->
								<rect
									x='-8'
									y='-1.5'
									width='8'
									height='3'
									fill='url(#fanmuGradient-logo)'
									rx='1.5'
								></rect>
								
								<!-- Ë£ÖÈ•∞ÊÄßÁöÑ‰ª£Á†ÅÂÖÉÁ¥† -->
								<circle cx='6' cy='-8' r='1' fill='url(#fanmuGradient)' opacity='0.6'></circle>
								<circle cx='8' cy='-4' r='0.8' fill='url(#fanmuGradient)' opacity='0.8'></circle>
								<circle cx='4' cy='6' r='0.6' fill='url(#fanmuGradient)' opacity='0.7'></circle>
								
								<!-- ÊäÄÊúØÊÑüË£ÖÈ•∞Á∫øÊù° -->
								<path
									d='M 10 -10 L 12 -8 M 10 -6 L 12 -4'
									stroke='url(#fanmuGradient-logo)'
									stroke-width='1'
									opacity='0.5'
									stroke-linecap='round'
								></path>
							</g>
						</svg>
					</div>
					<div class='logo-text'>
						<span class='logo-title'>Fanmu</span>
						<span class='logo-subtitle'>yancode.life</span>
					</div>
				</a>
			</div>

			<!-- Âè≥‰æßÔºöÁßªÂä®Á´ØËèúÂçï + ÊêúÁ¥¢ + ‰∏ªÈ¢òÂàáÊç¢ + Âø´Êç∑ÈìæÊé• -->
			<div class='header-actions'>
				<!-- ÁßªÂä®Á´ØÊ±âÂ†°ËèúÂçïÊåâÈíÆ -->
				<button
					id='mobile-menu-toggle'
					class='mobile-menu-toggle show-mobile'
					aria-label='ÂàáÊç¢ËèúÂçï'
					title='ÂàáÊç¢ËèúÂçï'
				>
					<svg class='menu-icon' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
						<path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'></path>
					</svg>
					<svg class='close-icon' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
						<path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 18L18 6M6 6l12 12'></path>
					</svg>
				</button>

				<!-- Âø´Êç∑Â§ñÈÉ®ÈìæÊé• -->
				<div class='external-links hide-mobile'>
					<button
						onclick="window.open('/github', '_blank')"
						class='action-btn'
						title='GitHub'
						aria-label='GitHub'
					>
						<svg class='h-5 w-5' fill='currentColor' viewBox='0 0 24 24'>
							<path
								d='M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z'
							></path>
						</svg>
					</button>
				</div>

				<!-- ÊêúÁ¥¢Ê°Ü -->
				{
					false && (
						<div class='search-container'>
							<div class='search-wrapper'>
								<input
									type='search'
									placeholder='ÊêúÁ¥¢'
									id='global-search'
									class='search-input'
								/>
								<div class='search-icon-wrapper'>
									<svg
										class='search-icon'
										fill='none'
										stroke='currentColor'
										viewBox='0 0 24 24'
									>
										<path
											stroke-linecap='round'
											stroke-linejoin='round'
											stroke-width='2'
											d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'
										/>
									</svg>
								</div>
								<div class='search-kbd-wrapper'>
									<kbd class='search-kbd'>
										<span class='text-xs'>‚åò</span>K
									</kbd>
								</div>
							</div>
						</div>
					)
				}

				<!-- ‰∏ªÈ¢òÂàáÊç¢ÊåâÈíÆ -->
				{
					showThemeToggle && (
						<button
							id='theme-toggle'
							class='action-btn theme-toggle'
							aria-label='ÂàáÊç¢‰∏ªÈ¢ò'
							title='ÂàáÊç¢‰∏ªÈ¢ò'
						>
							<!-- Â§™Èò≥ÂõæÊ†á (ÊµÖËâ≤Ê®°ÂºèÊó∂ÊòæÁ§∫) -->
							<svg
								class='theme-icon theme-icon-sun'
								fill='none'
								stroke='currentColor'
								viewBox='0 0 24 24'
								stroke-width='2'
							>
								<circle cx='12' cy='12' r='5'></circle>
								<path d='M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42'></path>
							</svg>
							
							<!-- Êúà‰∫ÆÂõæÊ†á (Ê∑±Ëâ≤Ê®°ÂºèÊó∂ÊòæÁ§∫) -->
							<svg
								class='theme-icon theme-icon-moon'
								fill='none'
								stroke='currentColor'
								viewBox='0 0 24 24'
								stroke-width='2'
							>
								<path d='M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z'></path>
							</svg>
						</button>
					)
				}
			</div>
		</div>
	</div>
</header>

<!-- ‰∏ªÈ¢òÂàáÊç¢ËÑöÊú¨ -->
<script>
	// ÁÆÄÂåñÁöÑ‰∏ªÈ¢òÂàáÊç¢ÂäüËÉΩ
	function initThemeToggle() {
		const themeToggle = document.getElementById('theme-toggle');
		
		if (!themeToggle) return;

		let isTransitioning = false;

		function toggleTheme() {
			if (isTransitioning) return;
			
			isTransitioning = true;
			const html = document.documentElement;
			const isDark = html.classList.contains('dark');
			const newTheme = isDark ? 'light' : 'dark';

			console.log(`üé® ‰∏ªÈ¢òÂàáÊç¢: ${isDark ? 'dark' : 'light'} ‚Üí ${newTheme}`);

			// Ê∑ªÂä†ËøáÊ∏°Á±ª
			html.classList.add('theme-transitioning');

			// Âº∫Âà∂ÈáçÁªò
			html.offsetHeight;

			// Âú®‰∏ã‰∏ÄÂ∏ßÂàáÊç¢‰∏ªÈ¢ò
			requestAnimationFrame(() => {
				if (isDark) {
					html.classList.remove('dark');
				} else {
					html.classList.add('dark');
				}
				
				localStorage.setItem('theme', newTheme);
				
				// Âº∫Âà∂ÈáçÁªòÂÖ≥ÈîÆÂÖÉÁ¥†
				const elementsToRepaint = [
					document.querySelector('header'),
					document.querySelector('.header-nav'),
					document.querySelector('.sidebar'),
					document.querySelector('.main-content'),
					document.body
				];
				
				elementsToRepaint.forEach(element => {
					if (element) {
						(element as HTMLElement).offsetHeight; // Âº∫Âà∂ÈáçÁªò
					}
				});

				console.log(`‚úÖ ‰∏ªÈ¢òÂàáÊç¢ÂÆåÊàê: ${newTheme}`);
			});

			// Ê∏ÖÁêÜËøáÊ∏°Áä∂ÊÄÅ
			setTimeout(() => {
				html.classList.remove('theme-transitioning');
				isTransitioning = false;
			}, 300);
		}

		// ÁªëÂÆöÁÇπÂáª‰∫ã‰ª∂
		themeToggle.addEventListener('click', toggleTheme);
	}

	// ÁßªÂä®Á´ØËèúÂçïÂàáÊç¢ÂäüËÉΩ
	function initMobileMenu() {
		const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
		const sidebar = document.querySelector('.sidebar');
		const body = document.body;
		
		if (!mobileMenuToggle || !sidebar) return;

		let isMenuOpen = false;

		function toggleMobileMenu() {
			isMenuOpen = !isMenuOpen;
			
			if (isMenuOpen) {
				sidebar!.classList.add('mobile-menu-open');
				body.classList.add('mobile-menu-active');
				mobileMenuToggle!.classList.add('menu-open');
				mobileMenuToggle!.setAttribute('aria-expanded', 'true');
			} else {
				sidebar!.classList.remove('mobile-menu-open');
				body.classList.remove('mobile-menu-active');
				mobileMenuToggle!.classList.remove('menu-open');
				mobileMenuToggle!.setAttribute('aria-expanded', 'false');
			}
		}

		// ÁÇπÂáªÊ±âÂ†°ËèúÂçïÊåâÈíÆ
		mobileMenuToggle!.addEventListener('click', toggleMobileMenu);

		// ÁÇπÂáªÈÅÆÁΩ©Â±ÇÂÖ≥Èó≠ËèúÂçï
		document.addEventListener('click', (e) => {
			const target = e.target as Node;
			if (isMenuOpen && sidebar && mobileMenuToggle && !sidebar.contains(target) && !mobileMenuToggle.contains(target)) {
				toggleMobileMenu();
			}
		});

		// ESC ÈîÆÂÖ≥Èó≠ËèúÂçï
		document.addEventListener('keydown', (e) => {
			if (e.key === 'Escape' && isMenuOpen) {
				toggleMobileMenu();
			}
		});

		// Á™óÂè£Â§ßÂ∞èÂèòÂåñÊó∂Ëá™Âä®ÂÖ≥Èó≠ÁßªÂä®Á´ØËèúÂçï
		window.addEventListener('resize', () => {
			if (window.innerWidth > 768 && isMenuOpen) {
				toggleMobileMenu();
			}
		});
	}

	// È°µÈù¢Âä†ËΩΩÊó∂ÂàùÂßãÂåñ
	document.addEventListener('DOMContentLoaded', () => {
		initThemeToggle();
		initMobileMenu();
	});
	
	// ÊîØÊåÅ Astro View Transitions
	document.addEventListener('astro:after-swap', () => {
		initThemeToggle();
		initMobileMenu();
	});
</script>

<style>
	/* Â§¥ÈÉ®ÂØºËà™Ê†∑Âºè */
	.header-nav {
		position: sticky;
		top: 0;
		z-index: 50;
		width: 100%;
		border-bottom: 1px solid var(--h-nav-border);
		background-color: var(--h-nav-bg);
		backdrop-filter: blur(12px);
		transition: all var(--transition-normal);
		/* Á°Æ‰øù‰∏ªÈ¢òÂàáÊç¢Êó∂ÂêåÊ≠• */
		will-change: background-color, border-color;
	}

	.header-container {
		max-width: 100%;
		margin: 0 auto;
		padding: 0 1rem;
	}

	@media (min-width: 640px) {
		.header-container {
			padding: 0 1.5rem;
		}
	}

	@media (min-width: 1024px) {
		.header-container {
			padding: 0 2rem;
		}
	}

	.header-content {
		display: flex;
		align-items: center;
		justify-content: space-between;
		height: 4rem;
	}

	/* Logo Âå∫Âüü */
	.logo-section {
		display: flex;
		align-items: center;
	}

	.logo-link {
		display: flex;
		align-items: center;
		gap: 0.75rem;
		text-decoration: none;
		transition: all var(--transition-fast);
	}

	.logo-link:hover {
		transform: translateY(-1px);
	}

	.logo-icon {
		display: flex;
		height: 2.5rem;
		width: 2.5rem;
		align-items: center;
		justify-content: center;
		border-radius: 0.5rem;
		box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
		transition: all var(--transition-fast);
	}

	.logo-link:hover .logo-icon {
		box-shadow:
			0 4px 6px -1px rgb(0 0 0 / 0.1),
			0 2px 4px -2px rgb(0 0 0 / 0.1);
	}

	.logo-text {
		display: flex;
		flex-direction: column;
	}

	.logo-title {
		font-size: 1.25rem;
		font-weight: 700;
		color: var(--h-nav-text);
		transition: color var(--transition-fast);
		line-height: 1.2;
	}

	.logo-link:hover .logo-title {
		color: var(--h-nav-text-hover);
	}

	.logo-subtitle {
		font-size: 0.75rem;
		font-weight: 500;
		color: var(--g-text-tertiary);
		line-height: 1;
	}

	/* Âè≥‰æßÊìç‰ΩúÂå∫Âüü */
	.header-actions {
		display: flex;
		align-items: center;
		gap: 0.75rem;
	}

	.external-links {
		display: none;
	}

	@media (min-width: 768px) {
		.external-links {
			display: flex;
			align-items: center;
			gap: 0.5rem;
		}
	}

	.action-btn {
		padding: 0.5rem;
		border-radius: 0.5rem;
		transition: all var(--transition-fast);
		color: var(--g-text-secondary);
		background-color: transparent;
		border: none;
		cursor: pointer;
		display: flex;
		align-items: center;
		justify-content: center;
		position: relative;
	}

	.action-btn:hover {
		color: var(--h-nav-text-hover);
		background-color: var(--a-main-item-bg-hover);
		transform: translateY(-1px);
	}

	.action-btn:focus {
		outline: none;
	}

	/* ÊêúÁ¥¢Ê°Ü */
	.search-container {
		position: relative;
	}

	.search-wrapper {
		position: relative;
	}

	.search-input {
		width: 16rem;
		padding: 0.625rem 1rem 0.625rem 2.5rem;
		font-size: 0.875rem;
		background-color: var(--s-input-bg);
		border: 1px solid var(--s-input-border);
		color: var(--s-input-text);
		border-radius: 0.5rem;
		transition: all var(--transition-fast);
	}

	.search-input:focus {
		outline: none;
		border-color: var(--s-input-border-focus);
		box-shadow: 0 0 0 3px rgba(251, 146, 60, 0.1);
	}

	.search-input::placeholder {
		color: var(--s-input-placeholder);
	}

	.search-icon-wrapper {
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 2.5rem;
		display: flex;
		align-items: center;
		justify-content: center;
		pointer-events: none;
	}

	.search-icon {
		height: 1rem;
		width: 1rem;
		color: var(--s-input-placeholder);
	}

	.search-kbd-wrapper {
		position: absolute;
		top: 0;
		right: 0;
		height: 100%;
		padding-right: 0.75rem;
		display: flex;
		align-items: center;
	}

	.search-kbd {
		height: 1.25rem;
		display: none;
		align-items: center;
		gap: 0.25rem;
		border-radius: 0.25rem;
		border: 1px solid var(--g-border);
		background-color: var(--g-bg-tertiary);
		padding: 0 0.375rem;
		font-family: monospace;
		font-size: 0.75rem;
		color: var(--g-text-tertiary);
	}

	@media (min-width: 640px) {
		.search-kbd {
			display: inline-flex;
		}
	}

	/* ‰∏ªÈ¢òÂàáÊç¢ÊåâÈíÆ */
	.theme-toggle {
		position: relative;
	}

	.theme-icon {
		height: 1.25rem;
		width: 1.25rem;
		transition: all var(--transition-fast);
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}

	/* ÊµÖËâ≤Ê®°ÂºèÊó∂ÊòæÁ§∫Â§™Èò≥ÔºåÈöêËóèÊúà‰∫Æ */
	.theme-icon-sun {
		opacity: 1;
		transform: translate(-50%, -50%) rotate(0deg) scale(1);
	}

	.theme-icon-moon {
		opacity: 0;
		transform: translate(-50%, -50%) rotate(90deg) scale(0);
	}

	/* Ê∑±Ëâ≤Ê®°ÂºèÊó∂ÊòæÁ§∫Êúà‰∫ÆÔºåÈöêËóèÂ§™Èò≥ */
	.dark .theme-icon-sun {
		opacity: 0;
		transform: translate(-50%, -50%) rotate(-90deg) scale(0);
	}

	.dark .theme-icon-moon {
		opacity: 1;
		transform: translate(-50%, -50%) rotate(0deg) scale(1);
	}

	/* ÁßªÂä®Á´ØÊ±âÂ†°ËèúÂçï */
	.mobile-menu-toggle {
		position: relative;
		width: 2.5rem;
		height: 2.5rem;
		padding: 0.5rem;
		background: transparent;
		border: none;
		cursor: pointer;
		color: var(--g-text-secondary);
		transition: all var(--transition-fast);
		border-radius: 0.5rem;
	}

	.mobile-menu-toggle:hover {
		background-color: var(--a-main-item-bg-hover);
		color: var(--h-nav-text-hover);
	}

	.mobile-menu-toggle:active {
		transform: scale(0.95);
	}

	.menu-icon,
	.close-icon {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: 1.5rem;
		height: 1.5rem;
		transition: all var(--transition-fast);
	}

	.menu-icon {
		opacity: 1;
		transform: translate(-50%, -50%) rotate(0deg) scale(1);
	}

	.close-icon {
		opacity: 0;
		transform: translate(-50%, -50%) rotate(90deg) scale(0);
	}

	.mobile-menu-toggle.menu-open .menu-icon {
		opacity: 0;
		transform: translate(-50%, -50%) rotate(-90deg) scale(0);
	}

	.mobile-menu-toggle.menu-open .close-icon {
		opacity: 1;
		transform: translate(-50%, -50%) rotate(0deg) scale(1);
	}

	/* ÁßªÂä®Á´ØËèúÂçïÈÅÆÁΩ© */
	body.mobile-menu-active::before {
		content: '';
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: rgba(0, 0, 0, 0.5);
		z-index: 30;
		opacity: 0;
		animation: fadeIn 0.3s ease-out forwards;
	}

	@keyframes fadeIn {
		to {
			opacity: 1;
		}
	}

	/* ÂìçÂ∫îÂºèËÆæËÆ° */
	@media (max-width: 640px) {
		.search-input {
			width: 12rem;
		}

		.header-actions {
			gap: 0.5rem;
		}
	}

	@media (min-width: 768px) and (max-width: 1024px) {
		.search-input {
			width: 14rem;
		}
	}

	@media (min-width: 1280px) {
		.search-input {
			width: 18rem;
		}
	}
</style>